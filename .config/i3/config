# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# This config file will use environmental variables such as $BROWSER and $TERMINAL.
# You can set these variables in /etc/profile or ~/.profile or ~/.bash_profile if you have it as below:
# export FILE="ranger"
# export TERMINAL="alacritty"
set $term --no-startup-id $TERMINAL

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Iosevka 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec --no-startup-id alacritty --class alacritty
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+q        [con_id="__focused__" instance="^(?!scratchpad_).*$"] kill
bindsym $mod+Shift+q  [con_id="__focused__" instance="^(?!scratchpad_).*$"] exec --no-startup-id kill -9 `xdotool getwindowfocus getwindowpid`

# start dmenu (a program launcher)
bindsym $mod+Shift+Return exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left 30
bindsym $mod+Shift+j move down 30
bindsym $mod+Shift+k move up 30
bindsym $mod+Shift+l move right 30

# move focused window to another output screen
bindsym $mod+Ctrl+h        move workspace to output left
bindsym $mod+Ctrl+j        move workspace to output down
bindsym $mod+Ctrl+k        move workspace to output up
bindsym $mod+Ctrl+l        move workspace to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+m split h

# split in vertical orientation
bindsym $mod+n split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# assign workspace to different screen
# Run `xrandr | grep ' connected'` or `xrandr --listactivemonitors` to connected screens
# set $monitor1 HDMI-0
# set $monitor2 DP-3
# workspace 0 output $monitor2
# workspace 1 output $monitor1
# workspace 2 output $monitor1
# workspace 3 output $monitor1
# workspace 4 output $monitor1
# workspace 5 output $monitor1
# workspace 6 output $monitor2
# workspace 7 output $monitor2
# workspace 8 output $monitor2
# workspace 9 output $monitor2
# workspace 10 output $monitor2

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 1 px or 1 ppt
        bindsym j resize grow height 1 px or 1 ppt
        bindsym k resize shrink height 1 px or 1 ppt
        bindsym l resize grow width 1 px or 1 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 1 px or 1 ppt
        bindsym Down resize grow height 1 px or 1 ppt
        bindsym Up resize shrink height 1 px or 1 ppt
        bindsym Right resize grow width 1 px or 1 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    font pango:Iosevka 10
    status_command i3blocks
    position top
    mode dock
    modifier None
    #i3bar_command i3bar --transparency #282828
    # status_command i3status
    # status_command exec ~/.config/i3/scripts/net-speed.sh
    colors {
        background #282828
        separator #ebdbb2
        #<colorclass> <border> <background> <text>
        focused_workspace  #83a598 #458588 #ebdbb2
        inactive_workspace #504945 #282828 #928374
        urgent_workspace   #cc241d #900000 #fb4934
    }
    # colors {
    #     background #011100
    #     statusline #ffffff
    #     separator #666666
    # }
}

# Personal Settings
#
# #---Basic Definitions---# #
for_window [class="^.*"] border pixel 0
gaps inner 20
gaps outer 5

bindsym $mod+semicolon     exec --no-startup-id ddspawn
# bindsym $mod+apostrophe    exec --no-startup-id 
bindsym $mod+apostrophe    exec --no-startup-id ddspawn scratchpadcalc

# Startup applications
exec_always --no-startup-id dunst -config ~/.config/dunst/dunstrc # for notify-send, a Customizable and lightweight notification-daemon
exec_always --no-startup-id autostart-i3
exec_always --no-startup-id picom-run
#exec_always --no-startup-id ~/.config/i3/scripts/wp-startbyi3-autochange.sh
exec_always --no-startup-id wp-change
exec_always --no-startup-id fcitx

bindsym $mod+minus exec vol-down
bindsym $mod+plus exec vol-up
bindsym $mod+BackSpace exec vol-toggle
bindsym $mod+Shift+p exec wp-change
bindsym $mod+Ctrl+p exec picom-toggle

bindsym $mod+c exec --no-startup-id google-chrome-stable
bindsym $mod+Ctrl+a exec --no-startup-id flameshot gui
bindsym $mod+Ctrl+e exec "emacsclient -c -a %"
# bindsym $mod+Ctrl+c exec "emacsclient -ne '(make-capture-frame)'"
# bindsym $mod+Ctrl+c exec --no-startup-id alacritty --class scratchpad_note -e /home/xc/dotfiles/bin/vimNoteCapture.sh
bindsym $mod+Ctrl+c exec ddspawn vimNoteCapture

# bracketleft bracketright colon, semicolon, less, equal, greater, asterisk, plus, comma, period, slash, apostrophe




# #---Scratchpad Windows---# #
# General scratchpad window traits. The order can matter.
for_window [instance="scratchpad_*"] floating enable
for_window [instance="scratchpad_*"] move scratchpad
for_window [instance="scratchpad_*"] sticky enable
for_window [instance="scratchpad_*"] scratchpad show
for_window [instance="scratchpad_tmuxdd"] resize set 625 450
for_window [instance="scratchpad_scratchpadcalc"] resize set 800 300
for_window [instance="scratchpad_term"] resize set 800 400
for_window [instance="scratchpad_tmuxdd"] border pixel 3
for_window [instance="scratchpad_scratchpadcalc"] border pixel 2
for_window [instance="scratchpad_*"] move position center
# for_window [class="chrome"] border pixel 0

# Bindings to make the webcam float and stick.
for_window [title="mpvfloat"] floating enable
for_window [title="mpvfloat"] sticky enable
for_window [title="mpvfloat"] border pixel 0
no_focus [title="mpvfloat"]

# Make the currently focused window a scratchpad
# bindsym $mod+Shift+backslash move scratchpad
# bindsym $mod+Ctrl+backslash exec $term --class scratchpad_term
# Show the first scratchpad window
# bindsym $mod+backslash scratchpad show
# move all floating windows to the scratchpad
# bindsym $mod+x [floating] move scratchpad

# for_window [class="Pinentry"] sticky enable
# for_window [class="sent"] border pixel 0px
# for_window [title="GIMP Startup"] move workspace $ws5
# for_window [class="Gimp"] move workspace $ws5
# for_window [window_role="GtkFileChooserDialog"] resize set 800 600
# for_window [window_role="GtkFileChooserDialog"] move position center
# for_window [title="Default - Wine desktop"] floating enable


#!/bin/sh
ZSH_DISABLE_COMPFIX=true
# export ZDOTDIR=$HOME/.config/zsh

# for ohmyzsh
source $HOME/.config/zsh/ohmyzsh-setup

# # Enable vi mode
# export KEYTIMEOUT=1
# bindkey -v

# # some useful options (man zshoptions)
# setopt autocd extendedglob nomatch menucomplete
# setopt interactive_comments
# stty stop undef		# Disable ctrl-s to freeze terminal.
# zle_highlight=('paste:none')

# beeping is annoying
unsetopt BEEP

# # completions
# autoload -Uz compinit
# zstyle ':completion:*' menu select
# # zstyle ':completion::complete:lsof:*' menu yes select
# zmodload zsh/complist
# _comp_options+=(globdots)		# Include hidden files.
# compinit

# autoload -U up-line-or-beginning-search
# autoload -U down-line-or-beginning-search
# zle -N up-line-or-beginning-search
# zle -N down-line-or-beginning-search

# # Colors
# autoload -Uz colors && colors


# Useful Functions
source "$HOME/.config/zsh/zsh-functions.zsh"

# Normal files to source
zsh_add_file "env.zsh"
zsh_add_file "git.zsh"
zsh_add_file "aliases.zsh"
zsh_add_file "aliases-docker.zsh"
zsh_add_file "shortcut.zsh"
zsh_add_file "fzf.zsh"

# Plugins
# zsh_add_plugin "zsh-users/zsh-autosuggestions"
# zsh_add_plugin "zsh-users/zsh-syntax-highlighting"
# zsh_add_plugin "hlissner/zsh-autopair"
# zsh_add_completion "esc/conda-zsh-completion" false
# For more plugins: https://github.com/unixorn/awesome-zsh-plugins
# More completions https://github.com/zsh-users/zsh-completions

## your project folder that we can `c [tab]` to
#export PROJECTS=$HOME/workspace

## Stash your environment variables in ~/.localrc. This means they'll stay out
## of your main dotfiles repository (which may be public, like this one), but
## you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

## all of our zsh files
#typeset -U config_files
## exclude for .dotfiles/.config/nvim/tmp/*.zsh
#config_files=($HOME/.config/**[^tmp]/*.zsh)

## load the path files
#for file in ${(M)config_files:#*/path.zsh}
#do
#  source $file
#done

## load everything but the path and completion files
#for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
#do
#  source $file
#done

## initialize autocomplete here, otherwise functions won't be loaded
##autoload -U compinit
##compinit

## load every completion after autocomplete loads
#for file in ${(M)config_files:#*/completion.zsh}
#do
#  source $file
#done

#unset config_files

# os specific
# for ZSH  `OSTYPE` is set by ZSH the shell itself.
case "$OSTYPE" in
  darwin*)
    export PATH="/opt/homebrew/opt/llvm/bin:$PATH"
    export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
    export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"
    # chmod 755 /usr/local/share/zsh
    # chmod 755 /usr/local/share/zsh/site-functions
    # chmod 755 $(brew --prefix)/share/zsh-completions
    # chmod 755 $(brew --prefix)/share/zsh/site-functions
    # compaudit | xargs chmod g-w,o-w
    FPATH=$(brew --prefix)/share/zsh-completions:$(brew --prefix)/share/zsh/site-functions:$FPATH
    ;;
  linux*)
    # do nth for now
    ;;
  dragonfly*|freebsd*|netbsd*|openbsd*)
    # do nth for now
    ;;
esac

# case "$(uname -s)" in
#   Darwin)
#     # echo 'Mac OS X'
#     alias ls='ls -G'
#     ;;
#   Linux)
#     alias ls='ls --color=auto'
#     ;;
#   CYGWIN* | MINGW32* | MSYS* | MINGW*)
#     # echo 'MS Windows'
#     ;;
#   *)
#     # echo 'Other OS'
#     ;;
# esac

# # Do we have systemd on board?
# if command systemctl > /dev/null; then
#   source $ZSH_CUSTOM/os/systemd.zsh
# fi

# # Ditto Kubernetes?
# if command kubectl > /dev/null; then
#   source $ZSH_CUSTOM/os/kubernetes.zsh
# fi

